{"version":3,"sources":["components/Alert.js","components/Navbar.js","components/TextForm.js","App.js","reportWebVitals.js","index.js"],"names":["Alert","props","alert","react_default","a","createElement","className","concat","type","role","word","lower","toLowerCase","charAt","toUpperCase","slice","capitalize","msg","Navbar","mode","href","title","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","id","aria-current","onClick","toggleMode","htmlFor","TextForm","_useState","useState","_useState2","Object","slicedToArray","count","setCount","_useState3","_useState4","count1","setCount1","countChar","countCons","_useState5","_useState6","text","setText","Fragment","style","color","heading","value","onChange","event","target","backgroundColor","rows","newText","showAlert","toLocaleLowerCase","length","match","split","prototype","PropTypes","string","isRequired","aboutText","defaultProps","App","setMode","setAlert","message","setTimeout","document","body","components_Alert","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","getElementById","render","StrictMode","src_App"],"mappings":"mMAoBeA,MAlBf,SAAeC,GAMb,OACEA,EAAMC,OACJC,EAAAC,EAAAC,cAAA,OACEC,UAAS,eAAAC,OAAiBN,EAAMC,MAAMM,KAAI,gCAC1CC,KAAK,SAELN,EAAAC,EAAAC,cAAA,cAXa,SAACK,GAClB,IAAMC,EAAQD,EAAKE,cACnB,OAAOD,EAAME,OAAO,GAAGC,cAAgBH,EAAMI,MAAM,GAStCC,CAAWf,EAAMC,MAAMM,MAAM,KAAU,IAAEP,EAAMC,MAAMe,sBCVvD,SAASC,EAAOjB,GAC7B,OACEE,EAAAC,EAAAC,cAAA,OACEC,UAAS,kCAAAC,OAAoCN,EAAMkB,KAAI,QAAAZ,OAAON,EAAMkB,OAEpEhB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBAIbH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,eAAec,KAAK,KAC9BnB,EAAMoB,OAETlB,EAAAC,EAAAC,cAAA,UACEC,UAAU,iBACVE,KAAK,SACLc,iBAAe,WACfC,iBAAe,0BACfC,gBAAc,yBACdC,gBAAc,QACdC,aAAW,qBAEXvB,EAAAC,EAAAC,cAAA,QAAMC,UAAU,yBAElBH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,2BAA2BqB,GAAG,0BAC3CxB,EAAAC,EAAAC,cAAA,MAAIC,UAAU,mCACZH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,YAIZH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,kBAAkBsB,eAAa,OAAOR,KAAK,KAAI,UAqBhEjB,EAAAC,EAAAC,cAAA,OACEC,UAAS,+BAAAC,OACQ,UAAfN,EAAMkB,KAAmB,OAAS,UAGpChB,EAAAC,EAAAC,cAAA,SACEC,UAAU,mBACVE,KAAK,WACLC,KAAK,SACLkB,GAAG,yBACHE,QAAS5B,EAAM6B,aAEjB3B,EAAAC,EAAAC,cAAA,SACEC,UAAU,mBACVyB,QAAQ,0BACT,wBCnEE,SAASC,EAAS/B,GAAO,IAAAgC,EACdC,mBAAS,GAAEC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GAA9BK,EAAKH,EAAA,GAAEI,EAAQJ,EAAA,GAAAK,EACMN,mBAAS,GAAEO,EAAAL,OAAAC,EAAA,EAAAD,CAAAI,EAAA,GAAhCE,EAAMD,EAAA,GAAEE,EAASF,EAAA,GAClBG,EAAY,EACdC,EAAY,EAAEC,EAEQZ,mBAAS,IAAGa,EAAAX,OAAAC,EAAA,EAAAD,CAAAU,EAAA,GAA7BE,EAAID,EAAA,GAAEE,EAAOF,EAAA,GA0CpB,OACE5C,EAAAC,EAAAC,cAAAF,EAAAC,EAAA8C,SAAA,KACE/C,EAAAC,EAAAC,cAAA,OACEC,UAAU,YACV6C,MAAO,CACLC,MAAsB,SAAfnD,EAAMkB,KAAkB,QAAU,YAG3ChB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACbH,EAAAC,EAAAC,cAAA,UAAKJ,EAAMoD,SACXlD,EAAAC,EAAAC,cAAA,YACEC,UAAU,eACVgD,MAAON,EACPO,SAjBa,SAACC,GAEtBP,EAAQO,EAAMC,OAAOH,QAgBbH,MAAO,CACLO,gBAAgC,SAAfzD,EAAMkB,KAAkB,UAAY,QACrDiC,MAAsB,SAAfnD,EAAMkB,KAAkB,QAAU,WAE3CQ,GAAG,QACHgC,KAAK,OAGTxD,EAAAC,EAAAC,cAAA,UAAQC,UAAU,uBAAuBuB,QA7DzB,WAEpB,IAAI+B,EAAUZ,EAAKlC,cACnBmC,EAAQW,GACR3D,EAAM4D,UAAU,2BAA2B,aAyD0B,wBAGjE1D,EAAAC,EAAAC,cAAA,UAAQC,UAAU,uBAAuBuB,QA1DzB,WACpB,IAAI+B,EAAUZ,EAAKc,oBACnBb,EAAQW,GACR3D,EAAM4D,UAAU,2BAA2B,aAuD0B,wBAGjE1D,EAAAC,EAAAC,cAAA,UAAQC,UAAU,uBAAuBuB,QAxDzB,WACpB,IAAKS,EAAQ,EAAGA,GAASU,EAAKe,OAAQzB,IAChCU,EAAKnC,OAAOyB,GAAO0B,MAAM,kBAE3BzB,IADAK,GAEA3C,EAAM4D,UAAU,8BAA8B,cAmDmB,uBAGjE1D,EAAAC,EAAAC,cAAA,UAAQC,UAAU,uBAAuBuB,QAjDzB,WACpB,IAAKa,EAAS,EAAGA,GAAUM,EAAKe,OAAQrB,IAEpCM,EACGnC,OAAO6B,GACPsB,MAAM,iDAGTrB,IADAE,GAIJ5C,EAAM4D,UAAU,kCAAkC,aAsCmB,4BAInE1D,EAAAC,EAAAC,cAAA,OACEC,UAAU,iBACV6C,MAAO,CACLC,MAAsB,SAAfnD,EAAMkB,KAAkB,QAAU,YAG3ChB,EAAAC,EAAAC,cAAA,UAAI,qBACJF,EAAAC,EAAAC,cAAA,SACG2C,EAAKiB,MAAM,KAAKF,OAAO,WAASf,EAAKe,OAAO,eAE/C5D,EAAAC,EAAAC,cAAA,SAAI,KAAQ2C,EAAKiB,MAAM,KAAKF,OAAO,iBACnC5D,EAAAC,EAAAC,cAAA,UAAI,qBACJF,EAAAC,EAAAC,cAAA,SAAIiC,EAAM,kBACVnC,EAAAC,EAAAC,cAAA,SAAIqC,EAAO,sBACXvC,EAAAC,EAAAC,cAAA,UAAI,WACJF,EAAAC,EAAAC,cAAA,SAAI2C,EAAKe,OAAO,EAAEf,EAAK,sDDrB/B9B,EAAOgD,UAAY,CACjB7C,MAAO8C,IAAUC,OAAOC,WACxBC,UAAWH,IAAUC,OAAOC,YAG9BnD,EAAOqD,aAAe,CACpBlD,MAAO,YACPiD,UAAW,SEpBEE,MA1Df,WAAe,IAAAvC,EACWC,mBAAS,SAAQC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GAAlCd,EAAIgB,EAAA,GAAEsC,EAAOtC,EAAA,GAAuBK,EACjBN,mBAAS,MAAKO,EAAAL,OAAAC,EAAA,EAAAD,CAAAI,EAAA,GAAjCtC,EAAKuC,EAAA,GAAEiC,EAAQjC,EAAA,GAEhBoB,EAAY,SAACc,EAASnE,GAC1BkE,EAAS,CACPzD,IAAK0D,EACLnE,KAAMA,IAERoE,WAAW,WACTF,EAAS,OACR,OAsBL,OACEvE,EAAAC,EAAAC,cAAAF,EAAAC,EAAA8C,SAAA,KAII/C,EAAAC,EAAAC,cAACa,EAAM,CAACG,MAAM,YAAYF,KAAMA,EAAMW,WAxBzB,WACJ,UAATX,GACFsD,EAAQ,QACRI,SAASC,KAAK3B,MAAMO,gBAAkB,UACtCG,EAAU,+BAAgC,WAC1CgB,SAASxD,MAAQ,0BAQjBoD,EAAQ,SACRI,SAASC,KAAK3B,MAAMO,gBAAkB,QACtCG,EAAU,gCAAiC,WAC3CgB,SAASxD,MAAQ,6BASflB,EAAAC,EAAAC,cAAC0E,EAAK,CAAC7E,MAAOA,IACdC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBASXH,EAAAC,EAAAC,cAAC2B,EAAQ,CAAC6B,UAAWA,EAAWR,QAAQ,kCAAkClC,KAAMA,OC7C7E6D,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxCC,EAAAC,EAAA,GAAAC,KAAAF,EAAAG,KAAA,UAAqBD,KAAK,SAAAE,GAAiD,IAA9CC,EAAMD,EAANC,OAAQC,EAAMF,EAANE,OAAQC,EAAMH,EAANG,OAAQC,EAAMJ,EAANI,OAAQC,EAAOL,EAAPK,QAC3DJ,EAAOP,GACPQ,EAAOR,GACPS,EAAOT,GACPU,EAAOV,GACPW,EAAQX,MCDDY,IAASC,WAAWjB,SAASkB,eAAe,SACpDC,OACH7F,EAAAC,EAAAC,cAACF,EAAAC,EAAM6F,WAAU,KACf9F,EAAAC,EAAAC,cAAC6F,EAAG,QAORlB","file":"static/js/main.2f8becdd.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nfunction Alert(props) {\r\n  const capitalize = (word) => {\r\n    const lower = word.toLowerCase();\r\n    return lower.charAt(0).toUpperCase() + lower.slice(1);\r\n  }\r\n\r\n  return (\r\n    props.alert && (\r\n      <div\r\n        className={`alert alert-${props.alert.type} alert-dismissible fade show`}\r\n        role=\"alert\"\r\n      >\r\n        <strong>{capitalize(props.alert.type)}:</strong> {props.alert.msg}\r\n      </div>\r\n    )\r\n  );\r\n}\r\n\r\nexport default Alert;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n// import { Link } from \"react-router-dom\";\r\n\r\nexport default function Navbar(props) {\r\n  return (\r\n    <nav\r\n      className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}\r\n    >\r\n      <div className=\"container-fluid\">\r\n        {/* <Link className=\"navbar-brand\" to=\"/\">\r\n          {props.title}\r\n        </Link> */}\r\n        <a className=\"navbar-brand\" href=\"/\">\r\n          {props.title}\r\n        </a>\r\n        <button\r\n          className=\"navbar-toggler\"\r\n          type=\"button\"\r\n          data-bs-toggle=\"collapse\"\r\n          data-bs-target=\"#navbarSupportedContent\"\r\n          aria-controls=\"navbarSupportedContent\"\r\n          aria-expanded=\"false\"\r\n          aria-label=\"Toggle navigation\"\r\n        >\r\n          <span className=\"navbar-toggler-icon\"></span>\r\n        </button>\r\n        <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n          <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n            <li className=\"nav-item\">\r\n              {/* <Link className=\"nav-link active\" aria-current=\"page\" to=\"/\">\r\n                Home\r\n              </Link> */}\r\n              <a className=\"nav-link active\" aria-current=\"page\" href=\"/\">\r\n                Home\r\n              </a>\r\n            </li>\r\n            {/* <li className=\"nav-item\">\r\n              <Link className=\"nav-link\" to=\"/about\">\r\n                {props.aboutText}\r\n              </Link>\r\n            </li> */}\r\n          </ul>\r\n          {/* <form className=\"d-flex\" role=\"search\">\r\n            <input\r\n              className=\"form-control me-2\"\r\n              type=\"search\"\r\n              placeholder=\"Search\"\r\n              aria-label=\"Search\"\r\n            />\r\n            <button className=\"btn btn-primary\" type=\"submit\">\r\n              Search\r\n            </button>\r\n          </form> */}\r\n          <div\r\n            className={`form-check form-switch text-${\r\n              props.mode === \"light\" ? \"dark\" : \"light\"\r\n            }`}\r\n          >\r\n            <input\r\n              className=\"form-check-input\"\r\n              type=\"checkbox\"\r\n              role=\"switch\"\r\n              id=\"flexSwitchCheckDefault\"\r\n              onClick={props.toggleMode}\r\n            />\r\n            <label\r\n              className=\"form-check-label\"\r\n              htmlFor=\"flexSwitchCheckDefault\"\r\n            >\r\n              Enable Dark Mode\r\n            </label>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  );\r\n}\r\n\r\nNavbar.prototype = {\r\n  title: PropTypes.string.isRequired,\r\n  aboutText: PropTypes.string.isRequired,\r\n};\r\n\r\nNavbar.defaultProps = {\r\n  title: \"TextUtils\",\r\n  aboutText: \"About\",\r\n};\r\n","import React, { useState } from \"react\";\r\n\r\nexport default function TextForm(props) {\r\n  let [count, setCount] = useState(0);\r\n  let [count1, setCount1] = useState(0);\r\n  let countChar = 0,\r\n    countCons = 0;\r\n\r\n  const [text, setText] = useState(\"\");\r\n  // text = \"New Text\"; // Wrong way to change the state\r\n  // setText(\"New Text\"); // Correct way to change the state\r\n  const handleUpClick = () => {\r\n    // console.log(\"Uppercase was clicked !\" + text);\r\n    let newText = text.toUpperCase();\r\n    setText(newText);\r\n    props.showAlert(\"Converted to Uppercase !\",\"success\");\r\n  };\r\n  const handleLoClick = () => {\r\n    let newText = text.toLocaleLowerCase();\r\n    setText(newText);\r\n    props.showAlert(\"Converted to Lowercase !\",\"success\");\r\n  };\r\n  const handleVoClick = () => {\r\n    for (count = 0; count <= text.length; count++) {\r\n      if (text.charAt(count).match(/[aeiouAEIOU]/)) {\r\n        countChar++;\r\n        setCount(countChar);\r\n        props.showAlert(\"Counted the no. of Vowels !\",\"success\");\r\n      }\r\n    }\r\n    // console.log(\"No. of Vowels are: \" + countChar);\r\n  };\r\n  const handleCoClick = () => {\r\n    for (count1 = 0; count1 <= text.length; count1++) {\r\n      if (\r\n        text\r\n          .charAt(count1)\r\n          .match(/[bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ]/)\r\n      ) {\r\n        countCons++;\r\n        setCount1(countCons);\r\n      }\r\n    }    \r\n    props.showAlert(\"Counted the no. of Consonants !\",\"success\");\r\n    // console.log(\"No. of consonants are: \" + countCons);\r\n  };\r\n  const handleOnChange = (event) => {\r\n    // console.log(\"On Change !\");\r\n    setText(event.target.value);\r\n  };\r\n  return (\r\n    <>\r\n      <div\r\n        className=\"container\"\r\n        style={{\r\n          color: props.mode === \"dark\" ? \"white\" : \"#042743\",\r\n        }}\r\n      >\r\n        <div className=\"mb-3\">\r\n          <h2>{props.heading}</h2>\r\n          <textarea\r\n            className=\"form-control\"\r\n            value={text}\r\n            onChange={handleOnChange}\r\n            style={{\r\n              backgroundColor: props.mode === \"dark\" ? \"#042743\" : \"white\",\r\n              color: props.mode === \"dark\" ? \"white\" : \"#042743\",\r\n            }}\r\n            id=\"myBox\"\r\n            rows=\"8\"\r\n          ></textarea>\r\n        </div>\r\n        <button className=\"btn btn-primary mx-1\" onClick={handleUpClick}>\r\n          Convert to Uppercase\r\n        </button>\r\n        <button className=\"btn btn-primary mx-1\" onClick={handleLoClick}>\r\n          Convert to Lowercase\r\n        </button>\r\n        <button className=\"btn btn-primary mx-1\" onClick={handleVoClick}>\r\n          Count no. of Vowels\r\n        </button>\r\n        <button className=\"btn btn-primary mx-1\" onClick={handleCoClick}>\r\n          Count no. of Consonants\r\n        </button>\r\n      </div>\r\n      <div\r\n        className=\"container my-3\"\r\n        style={{\r\n          color: props.mode === \"dark\" ? \"white\" : \"#042743\",\r\n        }}\r\n      >\r\n        <h3>Your text summary</h3>\r\n        <p>\r\n          {text.split(\" \").length} words, {text.length} characters\r\n        </p>\r\n        <p>{0.008 * text.split(\" \").length} Minutes read</p>\r\n        <h3>You have entered:</h3>\r\n        <p>{count} No. of Vowels</p>\r\n        <p>{count1} No. of Consonants</p>\r\n        <h3>Preview</h3>\r\n        <p>{text.length>0?text:'Enter something in the textbox to preview ir her'}</p>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\nimport \"./App.css\";\nimport Alert from \"./components/Alert\";\n// import About from \"./components/About\";\nimport Navbar from \"./components/Navbar\";\nimport TextForm from \"./components/TextForm\";\n// import { BrowserRouter as Router, Routes, Route, Link } from \"react-router-dom\";\n\nfunction App() {\n  const [mode, setMode] = useState(\"light\"); // Whether dark mode is enabled or not.\n  const [alert, setAlert] = useState(null);\n\n  const showAlert = (message, type) => {\n    setAlert({\n      msg: message,\n      type: type,\n    });\n    setTimeout(() => {\n      setAlert(null);\n    }, 1500);\n  };\n\n  const toggleMode = () => {\n    if (mode === \"light\") {\n      setMode(\"dark\");\n      document.body.style.backgroundColor = \"#042743\";\n      showAlert(\"Dark mode has been enabled !\", \"success\");\n      document.title = \"TextUtils - Dark Mode\";\n      // setInterval(() => {\n      //   document.title = \"TextUtils is Amazing Mode\";\n      // }, 2000);\n      // setInterval(() => {\n      //   document.title = \"Install TextUtils now\";\n      // }, 1500);\n    } else {\n      setMode(\"light\");\n      document.body.style.backgroundColor = \"white\";\n      showAlert(\"Light mode has been enabled !\", \"success\");\n      document.title = \"TextUtils - Light Mode\";\n    }\n  };\n  return (\n    <>\n      {/* <Router> */}\n        {/* <Navbar title=\"TextUtils\" aboutText=\"About TextUtils\" /> */}\n        {/* <Navbar /> */}\n        <Navbar title=\"TextUtils\" mode={mode} toggleMode={toggleMode} />\n        <Alert alert={alert} />\n        <div className=\"container my-3\">\n          {/* <Routes> */}\n            {/* <Route exact path=\"/about\" element={<About />} />  */}\n            {/* \n              Here, \"exact\" keyword is used because react js does partial matching...\n              For Example: if one path is /users and the other path is /users/home\n              then even if we click on /users/home it will redirect to /users..\n            */}\n            {/* <Route exact path=\"/\" element={  */}\n            <TextForm showAlert={showAlert} heading=\"Enter the text to analyse below\" mode={mode} />\n            {/* } /> */}\n          {/* </Routes> */}\n        </div>\n      {/* </Router> */}\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}